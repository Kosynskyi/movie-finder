{"version":3,"file":"static/js/315.d233e0de.chunk.js","mappings":"8OAEaA,EAAOC,EAAAA,GAAAA,GAAH,yOAQJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGDC,EAAYJ,EAAAA,GAAAA,EAAH,sFACV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACM,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACL,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAGHC,EAAqBP,EAAAA,GAAAA,EAAH,mJAKlB,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,MAAnB,IAID,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOE,GAAnB,IAIDC,EAAOX,EAAAA,GAAAA,EAAH,6DACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,UAAUO,EAAtB,IAGHC,EAAOb,EAAAA,GAAAA,KAAH,0DACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,OAAOM,OAAnB,IACG,SAAAb,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,I,SCWhB,EArCc,WACZ,OAAsCS,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAuBH,GAASI,KAAKL,EACtC,GAAE,CAACC,IAECF,EAEL,OACE,SAACO,EAAA,EAAD,WACE,SAACxB,EAAD,UACGiB,EAAYQ,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACpB,2BACE,UAACtB,EAAD,CACEuB,KAAI,wCAAmCF,GACvCG,OAAO,SACPC,IAAI,sBAHN,WAKE,gBACEC,IAAG,6CAAwCN,GAC3CO,IAAKN,EACLO,MAAM,QAER,SAAC/B,EAAD,UAAYwB,QAEd,UAACjB,EAAD,YACE,SAACE,EAAD,yBADF,IAC2BgB,OAdpBH,EADW,OAsB7B,C,2NC9CDU,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,qGACRF,EAAAA,EAAAA,GAAM,+BAAD,OAAgCC,IAD7B,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAMjBC,EAAiB,mCAAG,WAAMC,GAAN,wFACRP,EAAAA,EAAAA,GAAM,wBAAD,OACFC,EADE,4DACyDM,IAFtD,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAQjBG,EAAmB,mCAAG,WAAM1B,GAAN,wFACVkB,EAAAA,EAAAA,GAAM,SAAD,OACjBlB,EADiB,oBACEmB,EADF,oBADK,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAQnBnB,EAAsB,mCAAG,WAAMH,GAAN,wFACbkB,EAAAA,EAAAA,GAAM,SAAD,OACjBlB,EADiB,4BACUmB,EADV,oBADQ,cAC9BE,EAD8B,yBAI7BA,EAASC,MAJoB,2CAAH,sDAQtBK,EAAkB,mCAAG,WAAM3B,GAAN,wFACTkB,EAAAA,EAAAA,GAAM,SAAD,OACjBlB,EADiB,4BACUmB,EADV,2BADI,cAC1BE,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAQlBK,EAAa,mCAAG,WAAM5B,GAAN,0FACJkB,EAAAA,EAAAA,GAAM,UAAD,OAAWlB,EAAX,2BAAqCmB,IADtC,uBACnBG,EADmB,EACnBA,KADmB,kBAGpBA,EAAKC,SAHe,2CAAH,qD","sources":["components/Casts/Casts.styled.js","components/Casts/Casts.jsx","services/API/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  justify-items: center;\n  justify-content: center;\n  flex-shrink: 1;\n  grid-template-columns: repeat(auto-fit, minmax(80px, auto));\n  gap: 10px;\n  list-style: none;\n  padding: ${p => p.theme.space[1]}px;\n`;\n\nexport const ActorName = styled.p`\n  margin: ${p => p.theme.space[1]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const ActorLinkWikipedia = styled.a`\n  text-decoration: none;\n  color: goldenrod;\n\n  &:hover {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &:visited {\n    color: ${p => p.theme.colors.red};\n  }\n`;\n\nexport const Text = styled.p`\n  margin: ${p => p.theme.space[1]}px;\n  font-size: ${p => p.theme.fontSizes.xs};\n`;\n\nexport const Span = styled.span`\n  color: ${p => p.theme.colors.primary};\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastInformationById } from 'services/API/API';\nimport { Box } from 'components/Box';\nimport {\n  List,\n  ActorName,\n  Text,\n  Span,\n  ActorLinkWikipedia,\n} from './Casts.styled';\n\nconst Casts = () => {\n  const [castAndCrew, setCastAndCrew] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastInformationById(movieId).then(setCastAndCrew);\n  }, [movieId]);\n\n  if (!castAndCrew) return;\n\n  return (\n    <Box>\n      <List>\n        {castAndCrew.cast.map(({ cast_id, profile_path, name, character }) => (\n          <li key={cast_id}>\n            <ActorLinkWikipedia\n              href={`https://en.wikipedia.org/wiki/${name}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                alt={name}\n                width=\"80\"\n              />\n              <ActorName>{name}</ActorName>\n            </ActorLinkWikipedia>\n            <Text>\n              <Span>Character:</Span> {character}\n            </Text>\n          </li>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default Casts;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8cfcb474139669e5b2bb861e26380b30';\n\n//* @returns the list of the trending movies for today */\nexport const getTrendingMovies = async () => {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n//* @returns the list of the movies by keyword */\nexport const getMovieByKeyWord = async query => {\n  const response = await axios(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\n//* @returns the details of the movie by movie id */\nexport const getMovieDetailsById = async movieId => {\n  const response = await axios(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n//* @returns the cast information for the movie */\nexport const getCastInformationById = async movieId => {\n  const response = await axios(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n//* @returns the movie reviews */\nexport const getMovieReviewById = async movieId => {\n  const response = await axios(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n//* @returns the movie video */\nexport const getMovieVideo = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/videos?api_key=${API_KEY}`);\n\n  return data.results;\n};\n"],"names":["List","styled","p","theme","space","ActorName","fontSizes","s","ActorLinkWikipedia","colors","accent","red","Text","xs","Span","primary","useState","castAndCrew","setCastAndCrew","movieId","useParams","useEffect","getCastInformationById","then","Box","cast","map","cast_id","profile_path","name","character","href","target","rel","src","alt","width","axios","API_KEY","getTrendingMovies","response","data","results","getMovieByKeyWord","query","getMovieDetailsById","getMovieReviewById","getMovieVideo"],"sourceRoot":""}